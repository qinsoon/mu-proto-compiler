; ModuleID = 'int-register-spilling.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.7.4"

define i32 @main() nounwind uwtable ssp {
  %i = alloca i32, align 4
  store volatile i32 0, i32* %i, align 4
  %1 = load volatile i32* %i, align 4
  %2 = icmp slt i32 %1, 10
  br i1 %2, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %0, %.lr.ph
  %v32.032 = phi i32 [ %35, %.lr.ph ], [ 0, %0 ]
  %v1.031 = phi i32 [ %4, %.lr.ph ], [ 0, %0 ]
  %v2.030 = phi i32 [ %5, %.lr.ph ], [ 0, %0 ]
  %v3.029 = phi i32 [ %6, %.lr.ph ], [ 0, %0 ]
  %v4.028 = phi i32 [ %7, %.lr.ph ], [ 0, %0 ]
  %v5.027 = phi i32 [ %8, %.lr.ph ], [ 0, %0 ]
  %v6.026 = phi i32 [ %9, %.lr.ph ], [ 0, %0 ]
  %v7.025 = phi i32 [ %10, %.lr.ph ], [ 0, %0 ]
  %v8.024 = phi i32 [ %11, %.lr.ph ], [ 0, %0 ]
  %v9.023 = phi i32 [ %12, %.lr.ph ], [ 0, %0 ]
  %v10.022 = phi i32 [ %13, %.lr.ph ], [ 0, %0 ]
  %v11.021 = phi i32 [ %14, %.lr.ph ], [ 0, %0 ]
  %v12.020 = phi i32 [ %15, %.lr.ph ], [ 0, %0 ]
  %v13.019 = phi i32 [ %16, %.lr.ph ], [ 0, %0 ]
  %v14.018 = phi i32 [ %17, %.lr.ph ], [ 0, %0 ]
  %v15.017 = phi i32 [ %18, %.lr.ph ], [ 0, %0 ]
  %v16.016 = phi i32 [ %19, %.lr.ph ], [ 0, %0 ]
  %v17.015 = phi i32 [ %20, %.lr.ph ], [ 0, %0 ]
  %v18.014 = phi i32 [ %21, %.lr.ph ], [ 0, %0 ]
  %v19.013 = phi i32 [ %22, %.lr.ph ], [ 0, %0 ]
  %v20.012 = phi i32 [ %23, %.lr.ph ], [ 0, %0 ]
  %v21.011 = phi i32 [ %24, %.lr.ph ], [ 0, %0 ]
  %v22.010 = phi i32 [ %25, %.lr.ph ], [ 0, %0 ]
  %v23.09 = phi i32 [ %26, %.lr.ph ], [ 0, %0 ]
  %v24.08 = phi i32 [ %27, %.lr.ph ], [ 0, %0 ]
  %v25.07 = phi i32 [ %28, %.lr.ph ], [ 0, %0 ]
  %v26.06 = phi i32 [ %29, %.lr.ph ], [ 0, %0 ]
  %v27.05 = phi i32 [ %30, %.lr.ph ], [ 0, %0 ]
  %v28.04 = phi i32 [ %31, %.lr.ph ], [ 0, %0 ]
  %v29.03 = phi i32 [ %32, %.lr.ph ], [ 0, %0 ]
  %v30.02 = phi i32 [ %33, %.lr.ph ], [ 0, %0 ]
  %v31.01 = phi i32 [ %34, %.lr.ph ], [ 0, %0 ]
  %3 = load volatile i32* %i, align 4
  %4 = add nsw i32 %3, %v1.031
  %5 = add nsw i32 %4, %v2.030
  %6 = add nsw i32 %5, %v3.029
  %7 = add nsw i32 %6, %v4.028
  %8 = add nsw i32 %7, %v5.027
  %9 = add nsw i32 %8, %v6.026
  %10 = add nsw i32 %9, %v7.025
  %11 = add nsw i32 %10, %v8.024
  %12 = add nsw i32 %11, %v9.023
  %13 = add nsw i32 %12, %v10.022
  %14 = add nsw i32 %13, %v11.021
  %15 = add nsw i32 %14, %v12.020
  %16 = add nsw i32 %15, %v13.019
  %17 = add nsw i32 %16, %v14.018
  %18 = add nsw i32 %17, %v15.017
  %19 = add nsw i32 %18, %v16.016
  %20 = add nsw i32 %19, %v17.015
  %21 = add nsw i32 %20, %v18.014
  %22 = add nsw i32 %21, %v19.013
  %23 = add nsw i32 %22, %v20.012
  %24 = add nsw i32 %23, %v21.011
  %25 = add nsw i32 %24, %v22.010
  %26 = add nsw i32 %25, %v23.09
  %27 = add nsw i32 %26, %v24.08
  %28 = add nsw i32 %27, %v25.07
  %29 = add nsw i32 %28, %v26.06
  %30 = add nsw i32 %29, %v27.05
  %31 = add nsw i32 %30, %v28.04
  %32 = add nsw i32 %31, %v29.03
  %33 = add nsw i32 %32, %v30.02
  %34 = add nsw i32 %33, %v31.01
  %35 = add nsw i32 %34, %v32.032
  %36 = load volatile i32* %i, align 4
  %37 = add nsw i32 %36, 1
  store volatile i32 %37, i32* %i, align 4
  %38 = load volatile i32* %i, align 4
  %39 = icmp slt i32 %38, 10
  br i1 %39, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph, %0
  %v32.0.lcssa = phi i32 [ 0, %0 ], [ %35, %.lr.ph ]
  %v1.0.lcssa = phi i32 [ 0, %0 ], [ %4, %.lr.ph ]
  %v2.0.lcssa = phi i32 [ 0, %0 ], [ %5, %.lr.ph ]
  %v3.0.lcssa = phi i32 [ 0, %0 ], [ %6, %.lr.ph ]
  %v4.0.lcssa = phi i32 [ 0, %0 ], [ %7, %.lr.ph ]
  %v5.0.lcssa = phi i32 [ 0, %0 ], [ %8, %.lr.ph ]
  %v6.0.lcssa = phi i32 [ 0, %0 ], [ %9, %.lr.ph ]
  %v7.0.lcssa = phi i32 [ 0, %0 ], [ %10, %.lr.ph ]
  %v8.0.lcssa = phi i32 [ 0, %0 ], [ %11, %.lr.ph ]
  %v9.0.lcssa = phi i32 [ 0, %0 ], [ %12, %.lr.ph ]
  %v10.0.lcssa = phi i32 [ 0, %0 ], [ %13, %.lr.ph ]
  %v11.0.lcssa = phi i32 [ 0, %0 ], [ %14, %.lr.ph ]
  %v12.0.lcssa = phi i32 [ 0, %0 ], [ %15, %.lr.ph ]
  %v13.0.lcssa = phi i32 [ 0, %0 ], [ %16, %.lr.ph ]
  %v14.0.lcssa = phi i32 [ 0, %0 ], [ %17, %.lr.ph ]
  %v15.0.lcssa = phi i32 [ 0, %0 ], [ %18, %.lr.ph ]
  %v16.0.lcssa = phi i32 [ 0, %0 ], [ %19, %.lr.ph ]
  %v17.0.lcssa = phi i32 [ 0, %0 ], [ %20, %.lr.ph ]
  %v18.0.lcssa = phi i32 [ 0, %0 ], [ %21, %.lr.ph ]
  %v19.0.lcssa = phi i32 [ 0, %0 ], [ %22, %.lr.ph ]
  %v20.0.lcssa = phi i32 [ 0, %0 ], [ %23, %.lr.ph ]
  %v21.0.lcssa = phi i32 [ 0, %0 ], [ %24, %.lr.ph ]
  %v22.0.lcssa = phi i32 [ 0, %0 ], [ %25, %.lr.ph ]
  %v23.0.lcssa = phi i32 [ 0, %0 ], [ %26, %.lr.ph ]
  %v24.0.lcssa = phi i32 [ 0, %0 ], [ %27, %.lr.ph ]
  %v25.0.lcssa = phi i32 [ 0, %0 ], [ %28, %.lr.ph ]
  %v26.0.lcssa = phi i32 [ 0, %0 ], [ %29, %.lr.ph ]
  %v27.0.lcssa = phi i32 [ 0, %0 ], [ %30, %.lr.ph ]
  %v28.0.lcssa = phi i32 [ 0, %0 ], [ %31, %.lr.ph ]
  %v29.0.lcssa = phi i32 [ 0, %0 ], [ %32, %.lr.ph ]
  %v30.0.lcssa = phi i32 [ 0, %0 ], [ %33, %.lr.ph ]
  %v31.0.lcssa = phi i32 [ 0, %0 ], [ %34, %.lr.ph ]
  %40 = add i32 %v30.0.lcssa, %v31.0.lcssa
  %41 = add i32 %40, %v29.0.lcssa
  %42 = add i32 %41, %v28.0.lcssa
  %43 = add i32 %42, %v27.0.lcssa
  %44 = add i32 %43, %v26.0.lcssa
  %45 = add i32 %44, %v25.0.lcssa
  %46 = add i32 %45, %v24.0.lcssa
  %47 = add i32 %46, %v23.0.lcssa
  %48 = add i32 %47, %v22.0.lcssa
  %49 = add i32 %48, %v21.0.lcssa
  %50 = add i32 %49, %v20.0.lcssa
  %51 = add i32 %50, %v19.0.lcssa
  %52 = add i32 %51, %v18.0.lcssa
  %53 = add i32 %52, %v17.0.lcssa
  %54 = add i32 %53, %v16.0.lcssa
  %55 = add i32 %54, %v15.0.lcssa
  %56 = add i32 %55, %v14.0.lcssa
  %57 = add i32 %56, %v13.0.lcssa
  %58 = add i32 %57, %v12.0.lcssa
  %59 = add i32 %58, %v11.0.lcssa
  %60 = add i32 %59, %v10.0.lcssa
  %61 = add i32 %60, %v9.0.lcssa
  %62 = add i32 %61, %v8.0.lcssa
  %63 = add i32 %62, %v7.0.lcssa
  %64 = add i32 %63, %v6.0.lcssa
  %65 = add i32 %64, %v5.0.lcssa
  %66 = add i32 %65, %v4.0.lcssa
  %67 = add i32 %66, %v3.0.lcssa
  %68 = add i32 %67, %v2.0.lcssa
  %69 = add i32 %68, %v1.0.lcssa
  %70 = add i32 %69, %v32.0.lcssa
  ret i32 %70
}
